
WORKS FOR 0 WITH DUPLICATING

def on_click_callback():
    """Handle user input and generate AI response."""
    human_prompt = st.session_state.human_prompt.strip()  # Clean up the input

    # Check if the input is "0"
    if human_prompt == "0":
        logging.warning("User entered '0' which is an invalid query.")
        st.session_state.history.append(Message("human", human_prompt))
        st.session_state.history.append(Message("ai", "This is an invalid query."))
        st.session_state.human_prompt = ""  # Clear the input field
        return  # Exit early to avoid further processing

    # Process normal input
    logging.info(f"User input: {human_prompt}")

    try:
        # Load the existing index
        storage_context = StorageContext.from_defaults(persist_dir=PERSIST_DIR)
        index = load_index_from_storage(storage_context)

        # Query the index
        query_engine = index.as_query_engine()
        response = query_engine.query(human_prompt)
        logging.info(f"AI response: {response}")

        # Append messages to chat history
        st.session_state.history.append(Message("human", human_prompt))
        st.session_state.history.append(Message("ai", response))

    except Exception as e:
        # Log the error and provide a user-friendly message
        logging.error(f"Error occurred: {e}")
        st.session_state.history.append(Message("human", human_prompt))
        st.session_state.history.append(Message("ai", "An error occurred. Please try again."))

    # Clear the input field after processing
    st.session_state.human_prompt = ""